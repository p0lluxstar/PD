version: '3.8'

services:
  db:
    container_name: db
    restart: always
    image: postgres
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data
      - db-logs:/var/log/postgresql
    networks:
      - postgres
    ports:
      - '${DB_PORT}:${DB_PORT}'
  backend:
    container_name: backend
    restart: always
    build:
      context: ./backend
      dockerfile: Dockerfile.app
    depends_on:
      - db
    environment:
      - API_PORT=${API_PORT}
      - API_HOST=${API_HOST}
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - DB_PORT=${DB_PORT}
      - DB_HOST=db
    networks:
      - postgres
    ports:
      - '${API_PORT}:${API_PORT}'  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.app
    container_name: frontend
    restart: always
    environment:
      - NODE_ENV=production
    command: ['npm', 'run', 'start']
    networks:
      - postgres
    ports:
      - '${FRONTEND_PORT}:${FRONTEND_PORT}'  

networks:
  postgres:
    driver: bridge

volumes:
  db-data:
  db-logs: